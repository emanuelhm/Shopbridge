// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopBridge.Data;

#nullable disable

namespace ShopBridge.Migrations
{
    [DbContext(typeof(Shopbridge_Context))]
    [Migration("20230316210912_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesCategory_Id")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsProduct_Id")
                        .HasColumnType("integer");

                    b.HasKey("CategoriesCategory_Id", "ProductsProduct_Id");

                    b.HasIndex("ProductsProduct_Id");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            CategoriesCategory_Id = 1,
                            ProductsProduct_Id = 1
                        });
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<int>("ProductsProduct_Id")
                        .HasColumnType("integer");

                    b.Property<int>("TagsTag_Id")
                        .HasColumnType("integer");

                    b.HasKey("ProductsProduct_Id", "TagsTag_Id");

                    b.HasIndex("TagsTag_Id");

                    b.ToTable("ProductTag");

                    b.HasData(
                        new
                        {
                            ProductsProduct_Id = 1,
                            TagsTag_Id = 1
                        });
                });

            modelBuilder.Entity("ShopBridge.Domain.Models.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Category_Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Category_Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Category_Id = 1,
                            Name = "Category 01"
                        });
                });

            modelBuilder.Entity("ShopBridge.Domain.Models.Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Product_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Product_Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Product_Id = 1,
                            Description = "Product 01",
                            Name = "Product 01",
                            Price = 1.0
                        });
                });

            modelBuilder.Entity("ShopBridge.Domain.Models.Tag", b =>
                {
                    b.Property<int>("Tag_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Tag_Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Tag_Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Tag_Id = 1,
                            Name = "Tag 01"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("ShopBridge.Domain.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesCategory_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopBridge.Domain.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProduct_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("ShopBridge.Domain.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProduct_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopBridge.Domain.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTag_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
